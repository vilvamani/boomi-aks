{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentPrefix": {
      "defaultValue": "boomi",
      "minLength": 3,
      "maxLength": 8,
      "type": "string",
      "metadata": {
        "description": "Name of the deployment prefix"
      }
    },
    "publicSubnetRef": {
      "type": "string",
      "metadata": {
        "description": "Name of the public subnet for virtual network"
      }
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "string",
      "metadata": {
        "description": "Location of Resources"
      }
    },
    "adminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Default Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Default Admin password"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "allowedValues": [
        "Standard_B1s",
        "Standard_DS1_v2"
      ],
      "metadata": {
        "description": "Virtual machine size (has to be at least the size of Standard_A3 to support 2 NICs)"
      }
    },
    "centOSVersion": {
      "type": "string",
      "defaultValue": "8_2",
      "allowedValues": [
        "8_2"
      ],
      "metadata": {
        "description": "The CentOS version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "fileShareName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "defaultValue": "fileshare",
      "metadata": {
        "description": "Specifies the name of the File Share. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only."
      }
    },
    "ServicePrincipalObjectID": {
      "type": "securestring"
    },
    "ServicePrincipalAppID": {
      "type": "securestring"
    },
    "ServicePrincipalSecret": {
      "type": "securestring"
    },
    "AksClusterName": {
      "type": "string"
    },
    "MoleculeUsername": {
      "type": "securestring"
    },
    "MoleculePassword": {
      "type": "securestring"
    },
    "MoleculeAccountID": {
      "type": "securestring"
    }
  },
  "variables": {
    "OSDiskName": "[concat(parameters('deploymentPrefix'), '-os-disk')]",
    "k8sServiceIpName": "[concat(parameters('deploymentPrefix'), '-k8s-service-ip')]",
    "bastionIpName": "[concat(parameters('deploymentPrefix'), '-bastion-ip')]",
    "bastionIpId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionIpName'))]",
    "bastionNicName": "[concat(parameters('deploymentPrefix'), '-bastion-nic')]",
    "bastionNicId": "[resourceId('Microsoft.Network/networkInterfaces', variables('bastionNicName'))]",
    "bastionVMName": "[concat(parameters('deploymentPrefix'), '-bastion-vm')]",
    "bastionVMId": "[resourceId('Microsoft.Compute/virtualMachines', variables('bastionVMName'))]",
    "vmExtensionName": "[concat(parameters('deploymentPrefix'), '-bastion-extension')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "[variables('k8sServiceIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "[variables('bastionIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "name": "[variables('bastionNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-05-01",
      "location": "[parameters('location')]",
      "comments": "This will be your Primary NIC",
      "dependsOn": [
        "[variables('bastionIpId')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "subnet": {
                "id": "[parameters('publicSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[variables('bastionIpId')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('bastionVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "tags": {
        "creationSource": "[concat(parameters('deploymentPrefix'), '-bastion-vmss')]"
      },
      "dependsOn": [
        "[variables('bastionNicId')]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('bastionVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "[parameters('centOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('bastionNicId')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "[concat(variables('vmExtensionName'), '-installcustomscript')]",
          "apiVersion": "2015-06-15",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[variables('bastionVMId')]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/vilvamani/boomi-aks/main/userdata-scripts/cuserdata.sh"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('./cuserdata.sh', ' --app_id \"', parameters('ServicePrincipalAppID'), '\" --app_key \"', parameters('ServicePrincipalSecret'), '\" --tenant_id \"', parameters('ServicePrincipalObjectID'), '\" --resource_group \"', resourceGroup().name, '\" --aks_name \"', parameters('AksClusterName'), '\" --storage_acc_name \"', parameters('storageAccountName'), '\" --molecule_username \"', parameters('MoleculeUsername'), '\" --molecule_password \"', parameters('MoleculePassword'), '\" --molecule_account \"', parameters('MoleculeAccountID'), '\" --k8s_service_ip \"', reference(variables('k8sServiceIpName')).ipAddress, '\" --fileshare \"', parameters('fileShareName'), '\"')]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "vmPublicIPAddress": {
      "type": "string",
      "value": "[reference(variables('bastionIpName')).ipAddress]"
    },
    "k8sServiceIPAddress": {
      "type": "string",
      "value": "[reference(variables('k8sServiceIpName')).ipAddress]"
    }
  }
}
